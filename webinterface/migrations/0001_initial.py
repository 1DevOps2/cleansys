# Generated by Django 2.0.4 on 2018-09-09 18:34

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Affiliation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('beginning', models.DateField()),
                ('end', models.DateField(default=datetime.date(9999, 12, 31))),
            ],
            options={
                'ordering': ('-end',),
            },
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cleaners_comment', models.CharField(max_length=200)),
                ('created', models.DateField(auto_now_add=True)),
            ],
            options={
                'ordering': ('-cleaning_day__date',),
            },
        ),
        migrations.CreateModel(
            name='Cleaner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
                ('slug', models.CharField(max_length=20, unique=True)),
                ('time_zone', models.CharField(default='Europe/Berlin', max_length=30)),
                ('slack_id', models.CharField(default='', max_length=10)),
                ('preference', models.IntegerField(choices=[(1, 'Ich möchte immer nur einen Putzdienst auf einmal machen müssen.'), (2, 'Ich möchte höchstens zwei Putzdienste auf einmal machen müssen.'), (3, 'Mir ist es egal, wie viele Putzdienste ich auf einmal habe.')], default=2)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='CleaningDay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('excluded', models.ManyToManyField(to='webinterface.Cleaner')),
            ],
            options={
                'ordering': ('-date',),
            },
        ),
        migrations.CreateModel(
            name='DutySwitch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True)),
                ('status', models.IntegerField(choices=[(0, 'Waiting on source choice'), (1, 'Waiting on approval for selected'), (2, 'Selected was rejected')], default=0)),
                ('destinations', models.ManyToManyField(to='webinterface.Assignment')),
                ('selected_assignment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='selected', to='webinterface.Assignment')),
                ('source_assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='source', to='webinterface.Assignment')),
            ],
            options={
                'ordering': ('created',),
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
                ('slug', models.CharField(max_length=20, unique=True)),
                ('cleaners_per_date', models.IntegerField(choices=[(1, 'Einen'), (2, 'Zwei')], default=1)),
                ('frequency', models.IntegerField(choices=[(1, 'Jede Woche'), (2, 'Gerade Wochen'), (3, 'Ungerade Wochen')], default=1)),
                ('disabled', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ('cleaners_per_date',),
            },
        ),
        migrations.CreateModel(
            name='ScheduleGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('disabled', models.BooleanField(default=False)),
                ('schedules', models.ManyToManyField(to='webinterface.Schedule')),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='TaskBase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('help_text', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('taskbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='webinterface.TaskBase')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
            ],
            bases=('webinterface.taskbase',),
        ),
        migrations.CreateModel(
            name='TaskTemplate',
            fields=[
                ('taskbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='webinterface.TaskBase')),
                ('disabled', models.BooleanField(default=False)),
                ('start_days_before', models.IntegerField(default=1)),
                ('end_days_after', models.IntegerField(default=2)),
                ('schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webinterface.Schedule')),
            ],
            bases=('webinterface.taskbase',),
        ),
        migrations.AddField(
            model_name='cleaningday',
            name='schedule',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webinterface.Schedule'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='cleaner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webinterface.Cleaner'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='cleaning_day',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webinterface.CleaningDay'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='schedule',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webinterface.Schedule'),
        ),
        migrations.AddField(
            model_name='affiliation',
            name='cleaner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webinterface.Cleaner'),
        ),
        migrations.AddField(
            model_name='affiliation',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webinterface.ScheduleGroup'),
        ),
        migrations.AddField(
            model_name='task',
            name='cleaned_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='webinterface.Assignment'),
        ),
        migrations.AddField(
            model_name='task',
            name='cleaning_day',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webinterface.CleaningDay'),
        ),
        migrations.AlterUniqueTogether(
            name='cleaningday',
            unique_together={('date', 'schedule')},
        ),
        migrations.AlterUniqueTogether(
            name='affiliation',
            unique_together={('beginning', 'cleaner')},
        ),
    ]
